/*
 * ISBM 2.0
 *
 * An OpenAPI specification for the ISBM 2.0 RESTful interface.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: info@mimosa.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Isbm2RestClient.Client;
using Isbm2RestClient.Api;
// uncomment below to import models
//using Isbm2RestClient.Model;

namespace Isbm2RestClient.Test.Api
{
    /// <summary>
    ///  Class for testing ChannelManagementApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ChannelManagementApiTests : IDisposable
    {
        private ChannelManagementApi instance;

        public ChannelManagementApiTests()
        {
            instance = new ChannelManagementApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ChannelManagementApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ChannelManagementApi
            //Assert.IsType<ChannelManagementApi>(instance);
        }

        /// <summary>
        /// Test AddSecurityTokens
        /// </summary>
        [Fact]
        public void AddSecurityTokensTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelUri = null;
            //List<Dictionary>? requestBody = null;
            //instance.AddSecurityTokens(channelUri, requestBody);
        }

        /// <summary>
        /// Test CreateChannel
        /// </summary>
        [Fact]
        public void CreateChannelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //Channel? channel = null;
            //var response = instance.CreateChannel(channel);
            //Assert.IsType<Channel>(response);
        }

        /// <summary>
        /// Test DeleteChannel
        /// </summary>
        [Fact]
        public void DeleteChannelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelUri = null;
            //instance.DeleteChannel(channelUri);
        }

        /// <summary>
        /// Test GetChannel
        /// </summary>
        [Fact]
        public void GetChannelTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelUri = null;
            //var response = instance.GetChannel(channelUri);
            //Assert.IsType<Channel>(response);
        }

        /// <summary>
        /// Test GetChannels
        /// </summary>
        [Fact]
        public void GetChannelsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GetChannels();
            //Assert.IsType<List<Channel>>(response);
        }

        /// <summary>
        /// Test RemoveSecurityTokens
        /// </summary>
        [Fact]
        public void RemoveSecurityTokensTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelUri = null;
            //List<Dictionary>? requestBody = null;
            //instance.RemoveSecurityTokens(channelUri, requestBody);
        }
    }
}
