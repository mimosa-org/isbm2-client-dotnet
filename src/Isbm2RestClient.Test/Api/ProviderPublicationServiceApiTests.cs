/*
 * ISBM 2.0
 *
 * An OpenAPI specification for the ISBM 2.0 RESTful interface.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: info@mimosa.org
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using Xunit;

using Isbm2RestClient.Client;
using Isbm2RestClient.Api;
// uncomment below to import models
//using Isbm2RestClient.Model;

namespace Isbm2RestClient.Test.Api
{
    /// <summary>
    ///  Class for testing ProviderPublicationServiceApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by OpenAPI Generator (https://openapi-generator.tech).
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    public class ProviderPublicationServiceApiTests : IDisposable
    {
        private ProviderPublicationServiceApi instance;

        public ProviderPublicationServiceApiTests()
        {
            instance = new ProviderPublicationServiceApi();
        }

        public void Dispose()
        {
            // Cleanup when everything is done.
        }

        /// <summary>
        /// Test an instance of ProviderPublicationServiceApi
        /// </summary>
        [Fact]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsType' ProviderPublicationServiceApi
            //Assert.IsType<ProviderPublicationServiceApi>(instance);
        }

        /// <summary>
        /// Test CloseSession
        /// </summary>
        [Fact]
        public void CloseSessionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sessionId = null;
            //instance.CloseSession(sessionId);
        }

        /// <summary>
        /// Test ExpirePublication
        /// </summary>
        [Fact]
        public void ExpirePublicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sessionId = null;
            //string messageId = null;
            //instance.ExpirePublication(sessionId, messageId);
        }

        /// <summary>
        /// Test OpenPublicationSession
        /// </summary>
        [Fact]
        public void OpenPublicationSessionTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string channelUri = null;
            //var response = instance.OpenPublicationSession(channelUri);
            //Assert.IsType<Session>(response);
        }

        /// <summary>
        /// Test PostPublication
        /// </summary>
        [Fact]
        public void PostPublicationTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string sessionId = null;
            //Message? message = null;
            //var response = instance.PostPublication(sessionId, message);
            //Assert.IsType<Message>(response);
        }
    }
}
